[versions]

# /!\ Koin in gradle.properties /!\

# Core
kotlin = "1.9.23"
binaryValidator = "0.13.2"
publish = "2.0.0-rc-1"
coroutines = "1.8.0" # "1.8.0-RC2" for wasm
dokka = "1.9.10"
# Android
agp = "7.4.2"
android-appcompat = "1.6.1"
android-activity = "1.8.2"
android-fragment = "1.6.2"
androidx-viewmodel = "2.7.0"
androidx-commonJava8 = "2.7.0"
androidx-workmanager = "2.9.0"
androidx-navigation = "2.7.7"
# Compose
# /!\ Compose compiler in gradle.properties /!\
composeJB = "1.6.1"
composeJetpackRuntime = "1.6.5"
composeJetpackViewmodel = "2.7.0"
# Decompose
decompose = "3.0.0-beta01"
# Test
stately = "2.0.6"
junit = "4.13.2"
jupiter = "5.9.3"
mockito = "4.7.0"
mockk = "1.13.2"
# Ktor
ktor = "2.3.9"
slf4j = "1.7.36"

[libraries]
# Core
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
extras-stately = { module = "co.touchlab:stately-concurrency", version.ref = "stately" }
extras-stately-collections = { module = "co.touchlab:stately-concurrent-collections", version.ref = "stately" }

# Test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
test-junit = { module = "junit:junit", version.ref = "junit" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
test-mockito = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
test-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
# Android
android-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "android-appcompat" }
android-activity = { module = "androidx.activity:activity-ktx", version.ref = "android-activity" }
android-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "android-fragment" }
androidx-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-viewmodel" }
androidx-commonJava8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidx-commonJava8" }
androidx-navigation = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-workmanager" }
# Ktor
ktor-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-testHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
# Compose
compose-jb = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "composeJB" }
androidx-composeRuntime = { module = "androidx.compose.runtime:runtime", version.ref = "composeJetpackRuntime" }
androidx-composeViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeJetpackViewmodel" }
androidx-composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "android-activity" }
# Decompose
decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-extensions = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decompose" }
[plugins]
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
compose = { id = "org.jetbrains.compose", version.ref = "composeJB" }
# Tools
kotlinBinary = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binaryValidator" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "publish" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }