[versions]

# /!\ Koin in gradle.properties /!\

# Core
kotlin = "2.1.10"
binaryValidator = "0.16.3"
publish = "2.0.0"
coroutines = "1.10.1"
dokka = "1.9.20"
uuid = "0.8.4"
detekt = "1.23.8"

# Android
agp = "7.4.2"
android-appcompat = "1.7.0"
android-activity = "1.10.1"
android-fragment = "1.8.6"
androidx-lifecycle = "2.8.7"
androidx-workmanager = "2.10.0"
androidx-navigation = "2.8.9"
androidx-startup= "1.2.0"

# Compose
composeJetpackRuntime = "1.7.8"
composeJB = "1.7.3"
composeLifecycle = "2.8.4"
composeNavigation = "2.8.0-alpha10" # 2.8.0-alpha02 to keep compose 1.6.11
jbCoreBundle = "1.0.1"
jbSavedState = "1.2.2"

# Test
stately = "2.1.0"
junit = "4.13.2"
jupiter = "5.11.3"
mockito = "4.8.0"
mockk = "1.13.2"
# Ktor
ktor = "2.3.12" #to be removed after Koin 4.1
ktor3 = "3.1.1"
slf4j = "2.0.16"
uuidVersion = "0.8.4"

benchmark = "0.4.13"

[libraries]
# Core
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
extras-stately = { module = "co.touchlab:stately-concurrency", version.ref = "stately" }
extras-stately-collections = { module = "co.touchlab:stately-concurrent-collections", version.ref = "stately" }

# Test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
test-junit = { module = "junit:junit", version.ref = "junit" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
test-mockito = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
test-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
# Android
android-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "android-appcompat" }
android-activity = { module = "androidx.activity:activity-ktx", version.ref = "android-activity" }
android-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "android-fragment" }
androidx-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-commonJava8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidx-lifecycle" }
androidx-navigation = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-workmanager" }
androidx-startup = {module ="androidx.startup:startup-runtime", version.ref = "androidx-startup" }

# Ktor
ktor-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-testHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor3-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor3" }
ktor3-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor3" }
ktor3-testHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor3" }
ktor-slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
# jetpack Compose
androidx-composeRuntime = { module = "androidx.compose.runtime:runtime", version.ref = "composeJetpackRuntime" }
androidx-composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeJetpackRuntime" }
androidx-composeViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
# jb Compose
jb-composeRuntime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "composeJB" }
jb-composeViewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeLifecycle" }
jb-lifecycleViewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "composeLifecycle" }
jb-lifecycleViewmodelSavedState = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "composeLifecycle" }
jb-bundle = { module = "org.jetbrains.androidx.core:core-bundle", version.ref = "jbCoreBundle" }
jb-savedstate = { module = "org.jetbrains.androidx.savedstate:savedstate", version.ref = "jbSavedState" }
jb-composeNavigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
jb-navigation = { module = "org.jetbrains.androidx.navigation:navigation-common", version.ref = "composeNavigation" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuidVersion" }
# Benchmark
benchmark-runtime = {module = "org.jetbrains.kotlinx:kotlinx-benchmark-runtime", version.ref = "benchmark"}

[plugins]
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "composeJB" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
# Tools
kotlinBinary = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binaryValidator" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "publish" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
benchmark = { id = "org.jetbrains.kotlinx.benchmark", version.ref = "benchmark"}
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }